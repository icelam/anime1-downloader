name: Build
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - 'develop'
    tags-ignore:
      - '**' # prevent double build on release tag
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@main
      - name: Setup Python version
        uses: actions/setup-python@main
        with:
          python-version: 3.9.9
      - name: Install pipenv
        run: |
          pip install pipenv
      - name: Create virtual environment
        run: |
          make create-venv
          make install-ci
      - name: Run Pylint
        run: |
          # force continue on pylint error with exit 0
          make lint-ci || exit 0
      - name: Annotate Pylint results
        run: |
          jq -r '(.[] | "::warning file=" + (.path) + ",line=" + (.line | tostring) + ",col=" + (.column | tostring) + "::" + (."message-id") + ": " + (.message) + " (" + (.symbol) + ")")' reports/pylint.json | \
          while read i; do
              echo $i;
          done
      - name: Run unit test
        run: |
          make test
  build:
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repo
        uses: actions/checkout@main
      - name: Setup Python version
        uses: actions/setup-python@main
        with:
          python-version: 3.9.9
      - name: Install pipenv
        run: |
          pip install pipenv
      - name: Create virtual environment
        run: |
          make create-venv
          make install-ci
      - name: Create build
        run: |
          make build
      - name: Preserve build as artifact
        uses: actions/upload-artifact@v2
        with:
          name: anime1download-${{ matrix.os }}
          path: ./dist/*

