name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repo
        uses: actions/checkout@main
      - name: Setup Python version
        uses: actions/setup-python@main
        with:
          python-version: 3.9.9
      - name: Create build
        run: |
          pip install virtualenv
          make create-venv
          make build
      - name: Preserve build as artifact
        uses: actions/upload-artifact@v2
        with:
          name: anime1download-${{ matrix.os }}
          path: ./dist/*

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repo
        uses: actions/checkout@main
      - name: Setup Node.js version
        uses: actions/setup-node@main
        with:
          node-version: 14.x
      - name: Generate release body
        run: |
          npx rexreplace "(#+ \[\d+\.\d+\.\d+].*?)#+ \[?\d+\.\d+\.\d+]?" "_" -s -M -G -m -o "CHANGELOG.md" > RELEASE_BODY.md
          result=$(cat RELEASE_BODY.md)

          if [[ $? != 0 ]]; then
              echo "Command failed."
              exit 1;
          elif [[ $result ]]; then
              echo "Release body generated."
          else
              echo "This is the first release, using different command to generate release body."
              npx rexreplace "(#+ \[?\d+\.\d+\.\d+]?.*)" "_" -s -M -G -m -o "CHANGELOG.md" > RELEASE_BODY.md
          fi
      - name: Get release version
        id: get-release-version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Download macOS executable from artifacts
        uses: actions/download-artifact@v2
        with:
          name: anime1download-macos-latest
          path: ./anime1download-macos-${{ steps.get-release-version.outputs.VERSION }}
      - name: Download Ubuntu executable from artifacts
        uses: actions/download-artifact@v2
        with:
          name: anime1download-ubuntu-latest
          path: ./anime1download-ubuntu-${{ steps.get-release-version.outputs.VERSION }}
      - name: Download Windows executable from artifacts
        uses: actions/download-artifact@v2
        with:
          name: anime1download-windows-latest
          path: ./anime1download-windows-${{ steps.get-release-version.outputs.VERSION }}
      - name: Zip executables
        run: |
          zip -r anime1download-macos-${{ steps.get-release-version.outputs.VERSION }}.zip anime1download-macos-${{ steps.get-release-version.outputs.VERSION }}
          zip -r anime1download-ubuntu-${{ steps.get-release-version.outputs.VERSION }}.zip anime1download-ubuntu-${{ steps.get-release-version.outputs.VERSION }}
          zip -r anime1download-windows-${{ steps.get-release-version.outputs.VERSION }}.zip anime1download-windows-${{ steps.get-release-version.outputs.VERSION }}
      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ steps.get-release-version.outputs.VERSION }}
          tag_name: ${{ steps.get-release-version.outputs.VERSION }}
          body_path: RELEASE_BODY.md
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            anime1download-macos-${{ steps.get-release-version.outputs.VERSION }}.zip
            anime1download-ubuntu-${{ steps.get-release-version.outputs.VERSION }}.zip
            anime1download-windows-${{ steps.get-release-version.outputs.VERSION }}.zip
